{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":4532039,"sourceType":"datasetVersion","datasetId":2579480}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import os\nimport numpy as np\nimport pandas as pd\nimport keras\nfrom keras import layers\nfrom tensorflow import data as tf_data\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D, Dense, Flatten\nimport seaborn as sns\nfrom sklearn.metrics import confusion_matrix","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-04T10:02:58.398124Z","iopub.execute_input":"2024-07-04T10:02:58.398515Z","iopub.status.idle":"2024-07-04T10:02:58.403943Z","shell.execute_reply.started":"2024-07-04T10:02:58.398483Z","shell.execute_reply":"2024-07-04T10:02:58.402972Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"image_size = (224, 224)\nbatch_size = 128\n\ntrain_cards = keras.utils.image_dataset_from_directory(\n    \"/kaggle/input/cards-image-datasetclassification/train\",\n    labels=\"inferred\",\n    label_mode=\"int\",\n    seed=1337,\n    image_size=image_size,\n    batch_size=batch_size,\n)\n\ntest_cards = keras.utils.image_dataset_from_directory(\n    \"/kaggle/input/cards-image-datasetclassification/test\",\n    labels=\"inferred\",\n    label_mode=\"int\",\n    seed=1337,\n    image_size=image_size,\n    batch_size=batch_size,\n)\n\nvalid_cards = keras.utils.image_dataset_from_directory(\n    \"/kaggle/input/cards-image-datasetclassification/valid\",\n    labels=\"inferred\",\n    label_mode=\"int\",\n    seed=1337,\n    image_size=image_size,\n    batch_size=batch_size,\n)","metadata":{"execution":{"iopub.status.busy":"2024-07-04T09:53:43.919596Z","iopub.execute_input":"2024-07-04T09:53:43.920123Z","iopub.status.idle":"2024-07-04T09:53:47.460314Z","shell.execute_reply.started":"2024-07-04T09:53:43.920097Z","shell.execute_reply":"2024-07-04T09:53:47.459402Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(10, 10))\nfor images, labels in train_cards.take(1):\n    for i in range(9):\n        ax = plt.subplot(3, 3, i + 1)\n        plt.imshow(np.array(images[i]).astype(\"uint8\"))\n        plt.title(int(labels[i]))\n        plt.axis(\"off\")","metadata":{"execution":{"iopub.status.busy":"2024-07-04T09:53:47.461680Z","iopub.execute_input":"2024-07-04T09:53:47.462029Z","iopub.status.idle":"2024-07-04T09:53:49.150823Z","shell.execute_reply.started":"2024-07-04T09:53:47.461998Z","shell.execute_reply":"2024-07-04T09:53:49.149859Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data_augmentation_layers = [\n    layers.RandomFlip(\"horizontal\"),\n    layers.RandomRotation(0.1),\n]\n\n\ndef data_augmentation(images):\n    for layer in data_augmentation_layers:\n        images = layer(images)\n    return images\n\nplt.figure(figsize=(10, 10))\nfor images, _ in train_cards.take(1):\n    for i in range(9):\n        augmented_images = data_augmentation(images)\n        ax = plt.subplot(3, 3, i + 1)\n        plt.imshow(np.array(augmented_images[0]).astype(\"uint8\"))\n        plt.axis(\"off\")\n\n#augmented_train_cards = train_cards.map(\n    #lambda x, y: (data_augmentation(x), y))","metadata":{"execution":{"iopub.status.busy":"2024-07-04T09:53:49.152035Z","iopub.execute_input":"2024-07-04T09:53:49.152433Z","iopub.status.idle":"2024-07-04T09:53:51.267876Z","shell.execute_reply.started":"2024-07-04T09:53:49.152396Z","shell.execute_reply":"2024-07-04T09:53:51.266968Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"num_filters = 128\nfilter_size = 4\npool_size = 4\n\nmodel = keras.models.Sequential([\n    keras.layers.Input(shape=(224, 224, 3)),\n    Conv2D(num_filters, filter_size, activation='relu'),\n    MaxPooling2D(pool_size=pool_size),\n    Conv2D(num_filters*2, filter_size, activation='relu'),\n    MaxPooling2D(pool_size=pool_size),\n    Conv2D(num_filters*4, filter_size, activation='relu'),\n    MaxPooling2D(pool_size=pool_size),\n    Flatten(),\n    Dense(512, activation='relu'),\n    keras.layers.Dropout(0.2, seed=1337),\n    Dense(256, activation='relu'),\n    keras.layers.Dropout(0.1, seed=1337),\n    Dense(128, activation='relu'),\n    Dense(64, activation='relu'),\n    Dense(53, activation='softmax'),\n])","metadata":{"execution":{"iopub.status.busy":"2024-07-04T09:53:51.270698Z","iopub.execute_input":"2024-07-04T09:53:51.271065Z","iopub.status.idle":"2024-07-04T09:53:51.362343Z","shell.execute_reply.started":"2024-07-04T09:53:51.271030Z","shell.execute_reply":"2024-07-04T09:53:51.361596Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model.compile(optimizer='adam',\n             loss = 'sparse_categorical_crossentropy',\n             metrics=['accuracy'])\n\ncallback = keras.callbacks.EarlyStopping(monitor='val_loss',\n                                            patience=3,\n                                            restore_best_weights=True)","metadata":{"execution":{"iopub.status.busy":"2024-07-04T09:53:51.363417Z","iopub.execute_input":"2024-07-04T09:53:51.363698Z","iopub.status.idle":"2024-07-04T09:53:51.377309Z","shell.execute_reply.started":"2024-07-04T09:53:51.363672Z","shell.execute_reply":"2024-07-04T09:53:51.376366Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model.fit(train_cards, epochs=20, validation_data=test_cards, callbacks=callback)","metadata":{"execution":{"iopub.status.busy":"2024-07-04T09:53:51.378293Z","iopub.execute_input":"2024-07-04T09:53:51.378582Z","iopub.status.idle":"2024-07-04T09:57:05.548251Z","shell.execute_reply.started":"2024-07-04T09:53:51.378558Z","shell.execute_reply":"2024-07-04T09:57:05.547337Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"loss, accuracy = model.evaluate(valid_cards)\nprint(\"Loss: \", loss)\nprint(\"Accuracy: \", accuracy)","metadata":{"execution":{"iopub.status.busy":"2024-07-04T09:57:05.549585Z","iopub.execute_input":"2024-07-04T09:57:05.550224Z","iopub.status.idle":"2024-07-04T09:57:06.192132Z","shell.execute_reply.started":"2024-07-04T09:57:05.550189Z","shell.execute_reply":"2024-07-04T09:57:06.191223Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_true = []\ny_pred = []\n\nfor images, labels in train_cards:\n    predictions = model.predict(images)\n    y_true.extend(labels.numpy())\n    y_pred.extend(np.argmax(predictions, axis=1))\n\nconf_matrix = confusion_matrix(y_true, y_pred)\n\nplt.figure(figsize=(10, 7))\nsns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=test_cards.class_names, yticklabels=test_cards.class_names)\nplt.xlabel('Predicted Label')\nplt.ylabel('Actual Label')\nplt.title('Confusion Matrix')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-04T10:01:51.919680Z","iopub.execute_input":"2024-07-04T10:01:51.920067Z","iopub.status.idle":"2024-07-04T10:02:06.680054Z","shell.execute_reply.started":"2024-07-04T10:01:51.920038Z","shell.execute_reply":"2024-07-04T10:02:06.679163Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_true = []\ny_pred = []\n\nfor images, labels in test_cards:\n    predictions = model.predict(images)\n    y_true.extend(labels.numpy())\n    y_pred.extend(np.argmax(predictions, axis=1))\n\nconf_matrix = confusion_matrix(y_true, y_pred)\n\nplt.figure(figsize=(10, 7))\nsns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=test_cards.class_names, yticklabels=test_cards.class_names)\nplt.xlabel('Predicted Label')\nplt.ylabel('Actual Label')\nplt.title('Confusion Matrix')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-04T10:03:30.323245Z","iopub.execute_input":"2024-07-04T10:03:30.324074Z","iopub.status.idle":"2024-07-04T10:03:36.076786Z","shell.execute_reply.started":"2024-07-04T10:03:30.324037Z","shell.execute_reply":"2024-07-04T10:03:36.075694Z"},"trusted":true},"execution_count":null,"outputs":[]}]}