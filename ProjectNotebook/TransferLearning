{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":4532039,"sourceType":"datasetVersion","datasetId":2579480}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import os\nimport numpy as np\nimport pandas as pd\nimport keras\nfrom keras import layers\nfrom tensorflow import data as tf_data\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D, Dense, Flatten, BatchNormalization\nimport seaborn as sns\nfrom sklearn.metrics import confusion_matrix\nfrom keras.applications import VGG16","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-04T10:56:16.410914Z","iopub.execute_input":"2024-07-04T10:56:16.411261Z","iopub.status.idle":"2024-07-04T10:56:16.417373Z","shell.execute_reply.started":"2024-07-04T10:56:16.411232Z","shell.execute_reply":"2024-07-04T10:56:16.416371Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"image_size = (224, 224)\nbatch_size = 128\n\ntrain_cards = keras.utils.image_dataset_from_directory(\n    \"/kaggle/input/cards-image-datasetclassification/train\",\n    labels=\"inferred\",\n    label_mode=\"int\",\n    seed=1337,\n    image_size=image_size,\n    batch_size=batch_size,\n)\n\ntest_cards = keras.utils.image_dataset_from_directory(\n    \"/kaggle/input/cards-image-datasetclassification/test\",\n    labels=\"inferred\",\n    label_mode=\"int\",\n    seed=1337,\n    image_size=image_size,\n    batch_size=batch_size,\n)\n\nvalid_cards = keras.utils.image_dataset_from_directory(\n    \"/kaggle/input/cards-image-datasetclassification/valid\",\n    labels=\"inferred\",\n    label_mode=\"int\",\n    seed=1337,\n    image_size=image_size,\n    batch_size=batch_size,\n)","metadata":{"execution":{"iopub.status.busy":"2024-07-04T10:56:16.419079Z","iopub.execute_input":"2024-07-04T10:56:16.419401Z","iopub.status.idle":"2024-07-04T10:56:17.103258Z","shell.execute_reply.started":"2024-07-04T10:56:16.419368Z","shell.execute_reply":"2024-07-04T10:56:17.102527Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(10, 10))\nfor images, labels in train_cards.take(1):\n    for i in range(9):\n        ax = plt.subplot(3, 3, i + 1)\n        plt.imshow(np.array(images[i]).astype(\"uint8\"))\n        plt.title(int(labels[i]))\n        plt.axis(\"off\")","metadata":{"execution":{"iopub.status.busy":"2024-07-04T10:56:17.104581Z","iopub.execute_input":"2024-07-04T10:56:17.104861Z","iopub.status.idle":"2024-07-04T10:56:18.160418Z","shell.execute_reply.started":"2024-07-04T10:56:17.104836Z","shell.execute_reply":"2024-07-04T10:56:18.159518Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data_augmentation_layers = [\n    layers.RandomFlip(\"horizontal\"),\n    layers.RandomRotation(0.1),\n]\n\n\ndef data_augmentation(images):\n    for layer in data_augmentation_layers:\n        images = layer(images)\n    return images\n\nplt.figure(figsize=(10, 10))\nfor images, _ in train_cards.take(1):\n    for i in range(9):\n        augmented_images = data_augmentation(images)\n        ax = plt.subplot(3, 3, i + 1)\n        plt.imshow(np.array(augmented_images[0]).astype(\"uint8\"))\n        plt.axis(\"off\")\n\n#augmented_train_cards = train_cards.map(\n    #lambda x, y: (data_augmentation(x), y))","metadata":{"execution":{"iopub.status.busy":"2024-07-04T10:56:18.162525Z","iopub.execute_input":"2024-07-04T10:56:18.163141Z","iopub.status.idle":"2024-07-04T10:56:19.180002Z","shell.execute_reply.started":"2024-07-04T10:56:18.163105Z","shell.execute_reply":"2024-07-04T10:56:19.178340Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"base_model = VGG16(weights='imagenet', include_top=False, input_shape=(224, 224, 3))\nbase_model.trainable = False","metadata":{"execution":{"iopub.status.busy":"2024-07-04T10:56:19.182099Z","iopub.execute_input":"2024-07-04T10:56:19.183388Z","iopub.status.idle":"2024-07-04T10:56:19.473066Z","shell.execute_reply.started":"2024-07-04T10:56:19.183315Z","shell.execute_reply":"2024-07-04T10:56:19.472093Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"num_filters = 32\nfilter_size = 3\npool_size = 2\n\nmodel = keras.models.Sequential([\n    base_model,\n    #keras.layers.Input(shape=(224, 224, 3)),\n    Conv2D(num_filters, filter_size, activation='relu', padding='same'),\n    BatchNormalization(),\n    MaxPooling2D(pool_size=pool_size),\n    Conv2D(num_filters*2, filter_size, activation='relu', padding='same'),\n    BatchNormalization(),\n    MaxPooling2D(pool_size=pool_size),\n    Conv2D(num_filters*4, filter_size, activation='relu', padding='same'),\n    BatchNormalization(),\n    #MaxPooling2D(pool_size=pool_size),\n    Flatten(),\n    Dense(512, activation='relu'),\n    keras.layers.Dropout(0.5, seed=1337),\n    Dense(256, activation='relu'),\n    keras.layers.Dropout(0.5, seed=1337),\n    Dense(128, activation='relu'),\n    Dense(64, activation='relu'),\n    Dense(53, activation='softmax'),\n])","metadata":{"execution":{"iopub.status.busy":"2024-07-04T10:56:19.474134Z","iopub.execute_input":"2024-07-04T10:56:19.474423Z","iopub.status.idle":"2024-07-04T10:56:19.507524Z","shell.execute_reply.started":"2024-07-04T10:56:19.474396Z","shell.execute_reply":"2024-07-04T10:56:19.506668Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model.compile(optimizer='adam',\n             loss = 'sparse_categorical_crossentropy',\n             metrics=['accuracy'])\n\n#callback = keras.callbacks.EarlyStopping(monitor='val_loss',\n                                            #patience=3,\n                                            #restore_best_weights=True)","metadata":{"execution":{"iopub.status.busy":"2024-07-04T10:56:19.508860Z","iopub.execute_input":"2024-07-04T10:56:19.509159Z","iopub.status.idle":"2024-07-04T10:56:19.518163Z","shell.execute_reply.started":"2024-07-04T10:56:19.509133Z","shell.execute_reply":"2024-07-04T10:56:19.517343Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model.fit(train_cards, epochs=20, validation_data=test_cards)\n#, callbacks=callback","metadata":{"execution":{"iopub.status.busy":"2024-07-04T10:56:19.519373Z","iopub.execute_input":"2024-07-04T10:56:19.519736Z","iopub.status.idle":"2024-07-04T11:02:14.846872Z","shell.execute_reply.started":"2024-07-04T10:56:19.519706Z","shell.execute_reply":"2024-07-04T11:02:14.845910Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"loss, accuracy = model.evaluate(valid_cards)\nprint(\"Loss: \", loss)\nprint(\"Accuracy: \", accuracy)","metadata":{"execution":{"iopub.status.busy":"2024-07-04T11:03:09.212002Z","iopub.execute_input":"2024-07-04T11:03:09.212409Z","iopub.status.idle":"2024-07-04T11:03:09.750592Z","shell.execute_reply.started":"2024-07-04T11:03:09.212372Z","shell.execute_reply":"2024-07-04T11:03:09.749724Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_true = []\ny_pred = []\n\nfor images, labels in train_cards:\n    predictions = model.predict(images)\n    y_true.extend(labels.numpy())\n    y_pred.extend(np.argmax(predictions, axis=1))\n\nconf_matrix = confusion_matrix(y_true, y_pred)\n\nplt.figure(figsize=(10, 7))\nsns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=test_cards.class_names, yticklabels=test_cards.class_names)\nplt.xlabel('Predicted Label')\nplt.ylabel('Actual Label')\nplt.title('Confusion Matrix')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-04T11:02:15.394923Z","iopub.execute_input":"2024-07-04T11:02:15.395191Z","iopub.status.idle":"2024-07-04T11:03:02.604133Z","shell.execute_reply.started":"2024-07-04T11:02:15.395167Z","shell.execute_reply":"2024-07-04T11:03:02.600780Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_true = []\ny_pred = []\n\nfor images, labels in test_cards:\n    predictions = model.predict(images)\n    y_true.extend(labels.numpy())\n    y_pred.extend(np.argmax(predictions, axis=1))\n\nconf_matrix = confusion_matrix(y_true, y_pred)\n\nplt.figure(figsize=(10, 7))\nsns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=test_cards.class_names, yticklabels=test_cards.class_names)\nplt.xlabel('Predicted Label')\nplt.ylabel('Actual Label')\nplt.title('Confusion Matrix')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-04T11:03:02.605291Z","iopub.execute_input":"2024-07-04T11:03:02.605618Z","iopub.status.idle":"2024-07-04T11:03:09.209620Z","shell.execute_reply.started":"2024-07-04T11:03:02.605591Z","shell.execute_reply":"2024-07-04T11:03:09.207229Z"},"trusted":true},"execution_count":null,"outputs":[]}]}